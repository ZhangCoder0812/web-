/* 

 计算机分类：
    个人pc：
           台式机：
           笔记本：断电后有电池续航
    服务器：最好一直开机 插着点 不要宕机 
           设计追求高性能 容易坏 因为一直开着 发热 硬件容易受损
           
    服务器分类：
        按尺寸：1U / 2U / 4U 【1U=4.445厘米】
        按外形：机架式 / 刀片式 / 塔式 / 小型机[高端定制] / 云主机 
        按品牌：戴尔 / 惠普 / IBM

    两种形态：
        内核态：操作系统正在控制硬件
        用户态：应用程序正在运行    

 1. 软件分为两大类：
        操作系统：协调，管理，控制就算计硬件资源与应用软件的一个控制程序。
        应用软件：一堆代码文件

 2. 计算机体系的三层结构：
        应用程序
        操作系统
        硬件      

 3. 计算机五大组成部分：
        控制器：计算机指挥系统 负责控制其他硬件的运行 -- 大脑
        运算器：负责数学运算与逻辑运算 -- 大脑
               [控制器+运算器 = cpu]
        存储器：存储数据 
                内存/主存：内存条 基于电存储数据 断电数据丢失 临时保存数据 速度快 
                外存: 硬盘、磁盘 基于磁盘存储数据 断电不丢失 长久保存数据 速度慢

                cpu内部也有存储器 叫寄存器 跟cpu一样的材质做成 速度超快 没有延迟 
                不是主力存储设备 容量小 断电丢失 用于存储临时运算结果

                计算机越用越卡就是因为内存不足 存储数据越来越多 加内存条
                加快软件启动速度 要先从硬盘读入内存 所以要换快好硬盘 固态硬盘较好 好于机械硬盘
                mac配置的就是固态硬盘 所以启动软件较快
        输入设备：键盘 鼠标
        输出设备：显示器 打印机

    ps：程序的运行与计算机三大核心硬件 cpu，内存，硬盘 的关系
        程序最先存放在磁盘中
        程序的运行经历加载的过程：程序代码 数据从磁盘读入内存 cpu从内存中读取指令运行
        类似于人看一眼文字 大脑记住 然后去做
        cpu不会自发的控制程序运行 ，我们是控制cpu进而控制其他硬件运行

    ps：安装软件都装到硬盘里，不是安装在内存中 断电丢失[大脑失忆]
        软件的运行都是把数据加载到内存中
        所以说
           计算机硬盘的大小决定了能够安装的软件数量，
           计算机的内存大小决定了能够同时运行的软件数量。   

 4. 计算机是基于电工作的，电的特性 高低电频
    内存中放的就是一些高低电频「常称 0 1 」，磁盘 将磁信号转为电信号 高低电频  
    计算机里面不可能存数字 存的是高低电频

     buffer 缓冲区 [写数据]：内存中的数据不是立马刷入硬盘 攒一大波数据 再刷入硬盘。
                           cpu只负责把数据写入内存 操作系统再负责优化缓冲数据到硬盘。
                           类似于快递 卡车装满才发车 不是一有快递到站就装车发车 运输耗费时间   
     cache 缓存区 [读数据]：若cpu运行一条指令，这条指令需要从硬盘中读一些数据，涉及IO操作 cpu又要等待，
                           数据从硬盘读入内存 再读入cpu 每次都要经历这个流程 速度又慢了。
                           操作系统会有个cache缓存区 把硬盘中一些常用的数据在内存中缓存好 cpu直接从内存取
                           加快速度 第一次可能会慢 以后每次会快 不会缓存硬盘中全部的数据 只缓存常用的 具体
                           哪些常用 由操作系统自己决定。 
     buffer / cache 优化机制 linux系统中存在，这种优化机制当计算机内存够用时 linux自作主张去优化 虽然占用了
                            内存 但够用时空着也是空着 不如利用起来。若内存不够时 可以让linux把缓存释放掉
                            保证计算机能够正常运行下去。     
                             windows好像没有这种机制。                      
                                         

    做集群的目的：防止单点故障 性能更高
                集群一旦其中一个挂了 因该引起重视  肯定是不堪重负才挂的 要是不及时
                解决那么其他的过段时间也会挂 因为分担的压力更大了。
                做集群是为了腾出时间解决问题 而不是不解决问题


*/
